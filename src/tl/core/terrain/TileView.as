/**
 * Created by gaord on 2016/12/13.
 */
package tl.core.terrain
{
	import away3d.core.base.Geometry;
	import away3d.core.base.SubGeometry;
	import away3d.core.pick.PickingColliderType;
	import away3d.entities.Mesh;
	import away3d.materials.TextureMaterial;
	import away3d.materials.methods.TLTerrainDiffuseMethod;
	import away3d.materials.passes.SegmentPass;
	import away3d.textures.ATFTexture;
	import away3d.textures.BitmapTexture;
	import away3d.textures.BitmapTexture;
	import away3d.textures.RenderTexture;
	import away3d.textures.RenderTexture;

	import flash.display.BitmapData;

	import game.frameworks.Config;

	import tl.core.GPUResProvider;

	import tl.core.LightProvider;

	/**
	 * 渲染时候，method多任务
	 * 4层贴图融合
	 * 每层 贴图
	 * 共享地形的贴图 UV代表的是alphamask
	 * 内部平铺是terrainMethod的第三个参数tileData实现
	 * */
	public class TileView extends Mesh
	{
		private static var sharedTerrainMaterial: TextureMaterial ;
		public static var minimalDiffuse:BitmapTexture = new BitmapTexture(new BitmapData(1, 1, true, 0xff33cc33));

		private var _tileVO:TLTileVO;

		public function TileView(tileVO:TLTileVO)
		{
			_tileVO = tileVO;
			setDefaultMaterial(tileVO.parentTerrain.splatAlphaTexture, tileVO.parentTerrain.numTileX,tileVO.parentTerrain.numTileY );
			super(genGeometryFromTileVO(), sharedTerrainMaterial);

//        _textureMaterial.shadowMethod = LightProvider.getInstance().shadowMapMethod;
			this.x = _tileVO.worldX;
			this.z = _tileVO.worldZ;
//        this.addChild(_tileVO.worldAABB.boundingRenderable);
//			this.showBounds = true;
			mouseEnabled = true;
//			this.addEventListener(MouseEvent3D.MOUSE_DOWN, onMouseDown);
			//
			this.pickingCollider = PickingColliderType.AUTO_FIRST_ENCOUNTERED;
		}

		public function genGeometryFromTileVO():Geometry
		{
//			var end :Geometry = new CubeGeometry(TLTileVO.tileVerticlesX, TLTileVO.tileVerticlesY);
//			return end;
//			var end :Geometry = new SphereGeometry(_tileVO.baseSizeX);
			var end:Geometry    = new Geometry();
			var sub:SubGeometry = new SubGeometry();

			sub.updateIndexData(_tileVO.indexData);
			sub.fromVectors(_tileVO.vertexData, _tileVO.uvs, null, null);
//			sub.updateVertexData(_tileVO.vertexData);
//			sub.autoGenerateDummyUVs = true;
//			sub.scaleUV(_tileVO.texScales.x,_tileVO.texScales.y);

			sub.autoDeriveVertexNormals  = true;
			sub.autoDeriveVertexTangents = false;

			end.addSubGeometry(sub);
			return end;
		}

		public function validateHeight():void
		{
			if (_tileVO.isHeightValidated)
			{
				var sub:SubGeometry = this.geometry.subGeometries[0] as SubGeometry;
				sub.updateIndexData(_tileVO.indexData);
				sub.fromVectors(_tileVO.vertexData, _tileVO.uvs, null, null);
				sub.autoDeriveVertexNormals  = true;
				sub.autoDeriveVertexTangents = false;
				_tileVO.isHeightValidated    = false;
			}
		}

		// #pragma mark --  材质球生成  ------------------------------------------------------------

		/** 材质球生成 */
		[Inline]
		public static function setSharedMaterial(textures:Array, splatAlpha:SplatAlphaTexture, numTileX:int, numTileY:int):void
		{
			if(sharedTerrainMaterial !=null) return;
			var splatTextures:Array = textures.slice(1,5);
			var tileNormalMaterial:TextureMaterial = new TextureMaterial(textures[0], true, false, true);
			tileNormalMaterial.specular            = 0.0;
			tileNormalMaterial.lightPicker         = LightProvider.getInstance().lightPicker;
			tileNormalMaterial.shadowMethod = LightProvider.getInstance().shadowMapMethod;
			tileNormalMaterial.diffuseMethod       =
					new TLTerrainDiffuseMethod(splatTextures
							, splatAlpha
							, [numTileX,numTileY,numTileX,numTileY]);
			if(Config.FOG_ENABLE)
				tileNormalMaterial.addMethod(LightProvider.getInstance().fogMethod);
//			if(LightProvider.getInstance().nearFadeoutMethod)
//				tileNormalMaterial.addMethod(LightProvider.getInstance().nearFadeoutMethod);
			sharedTerrainMaterial = tileNormalMaterial;
		}
		[Inline]
		public static function setDefaultMaterial(splatAlpha:SplatAlphaTexture, numTileX:int, numTileY:int):void
		{
			setSharedMaterial([minimalDiffuse,minimalDiffuse,minimalDiffuse,minimalDiffuse,minimalDiffuse],splatAlpha , numTileX,numTileY);
		}

		public static function clearSharedMaterial():void
		{
			sharedTerrainMaterial = null;
		}
		//
		public function validateTexture( ):void
		{
			this.material = sharedTerrainMaterial;
		}

		public function get tileVO():TLTileVO
		{
			return _tileVO;
		}
	}
}
